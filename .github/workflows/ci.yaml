name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AUTOBUILDER_VERSION: 2025.09.01.8dde52f
  RULES_VERSION: v1.0.1
  EXPECTED_TRACES: 13480

jobs:
  ci-basic:
    runs-on: [self-hosted, test]
    container: gitlab/gitlab-runner-helper:ubuntu-x86_64-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Run tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check
        env:
          SEQRA_GITHUB_ACTOR: ${{ secrets.SEQRA_GITHUB_ACTOR }}
          SEQRA_GITHUB_TOKEN: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Upload Gradle reports
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports-ci-basic
          path: '**/build/reports/'
          retention-days: 1

  ci-se:
    runs-on: [self-hosted, test]
    container: gitlab/gitlab-runner-helper:ubuntu-x86_64-latest

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Run tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: seqra-jvm-sast-se:check
        env:
          SEQRA_GITHUB_ACTOR: ${{ secrets.SEQRA_GITHUB_ACTOR }}
          SEQRA_GITHUB_TOKEN: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Upload Gradle reports
        if: (!cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports-ci-se
          path: '**/build/reports/'
          retention-days: 1

  ci-container:
    if: ${{ vars.SEQRA_SAST_CONTAINER_CI }}
    runs-on: [self-hosted, test]
    container: cruizba/ubuntu-dind:focal-25.0.3
    permissions:
      contents: read
      packages: read

    steps:
      - name: Setup Git
        run: apt update && apt install -y git

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build analyzer docker image
        run: ./gradlew :buildProjectAnalyzerDocker -PanalyzerVersion=test
        env:
          SEQRA_GITHUB_ACTOR: ${{ secrets.SEQRA_GITHUB_ACTOR }}
          SEQRA_GITHUB_TOKEN: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Create image names
        run: |
          echo "AUTOBUILDER_IMAGE=ghcr.io/${{ github.repository_owner }}/seqra-jvm-autobuilder/sast-autobuilder:${{ env.AUTOBUILDER_VERSION }}" >> $GITHUB_ENV
          echo "ANALYZER_IMAGE=ghcr.io/${{ github.repository_owner }}/seqra-jvm-sast/sast-analyzer:test" >> $GITHUB_ENV

      - name: Tag images
        run: docker tag analyzer-private:test ${{ env.ANALYZER_IMAGE }}

      - name: Checkout owasp
        uses: actions/checkout@v4
        with:
          repository: 'OWASP-Benchmark/BenchmarkJava'
          path: ./test-dir/OWASP

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.SEQRA_GITHUB_ACTOR }}
          password: ${{ secrets.SEQRA_GITHUB_TOKEN }}

      - name: Build owasp
        run: |
          docker run -i -a stdout -a stderr --rm \
          -v ${{ github.workspace }}:/data \
          ${{ env.AUTOBUILDER_IMAGE }} \
          --project-root-dir /data/test-dir/OWASP \
          --build portable \
          --result-dir /data/test-dir/BenchmarkJava-portable-build \
          --logs-file /data/test-dir/autobuild.log \
          --verbosity debug

      - name: Checkout rules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SEQRA_GITHUB_TOKEN }}
          repository: '${{ github.repository_owner }}/seqra-rules'
          ref: ${{ env.RULES_VERSION }}
          path: ./test-dir/seqra-rules

      - name: Analyze owasp
        run: |
          docker run -i -a stdout -a stderr --rm \
          -v ${{ github.workspace }}:/data \
          ${{ env.ANALYZER_IMAGE }} \
          --project /data/test-dir/BenchmarkJava-portable-build/project.yaml \
          --semgrep-rule-set /data/test-dir/seqra-rules \
          --output-dir /data/test-dir/reports \
          --ifds-analysis-timeout=1000 \
          --logs-file /data/test-dir/analyzer.log \
          --verbosity debug

      - name: Check report exists
        run: |
          if [ -e "./test-dir/reports/report-ifds.sarif" ]; then
            echo "Report exists"
          else
            echo "Report does not exist"
            exit 1
          fi

      - name: Check stats
        run: |
          STATS="$(cat ./test-dir/analyzer.log | grep "TraceGenerationStats")"
          echo $STATS
          echo $STATS | grep -q "total=${{ env.EXPECTED_TRACES }}"
